# Generated by Django 5.2.4 on 2025-09-11 11:53

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('source', models.CharField(blank=True, max_length=255, null=True)),
                ('distance', models.DecimalField(blank=True, decimal_places=6, max_digits=10, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Locations',
            },
        ),
        migrations.CreateModel(
            name='TriviaQuestion',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('question_text', models.CharField(max_length=255)),
                ('choices', models.JSONField(default=list)),
                ('correct_answer', models.CharField(max_length=255)),
                ('tags', models.JSONField(default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Trivia Questions',
                'ordering': ['question_text'],
            },
        ),
        migrations.CreateModel(
            name='Quest',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('quest_type', models.CharField(choices=[('outdoor', 'Outdoor Adventure'), ('indoor', 'Indoor Challenge'), ('team', 'Team Quest'), ('individual', 'Individual Quest')], max_length=20)),
                ('difficulty', models.PositiveSmallIntegerField(choices=[(1, 'Easy'), (2, 'Moderate'), (3, 'Challenging'), (4, 'Difficult'), (5, 'Expert'), (6, 'Rare')], default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(6)])),
                ('duration_minutes', models.DurationField(help_text='Estimated duration in minutes')),
                ('experience_reward', models.PositiveIntegerField(help_text='Experience points reward')),
                ('requirements', models.JSONField(default=dict)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quests.location')),
            ],
        ),
        migrations.CreateModel(
            name='Challenge',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('is_mandatory', models.BooleanField(default=False)),
                ('experience_reward', models.PositiveIntegerField(help_text='Experience points reward for completing the challenge')),
                ('order', models.PositiveSmallIntegerField(default=1, help_text='Order of the challenge in the list')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('quests', models.ManyToManyField(related_name='challenges', to='quests.quest')),
            ],
            options={
                'verbose_name_plural': 'Challenges',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='ChallengeLog',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('completed_at', models.DateTimeField(auto_now_add=True)),
                ('experience_earned', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('challenge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='challenge_logs', to='quests.challenge')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='challenge_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Challenge Logs',
                'ordering': ['completed_at'],
                'unique_together': {('user', 'challenge')},
            },
        ),
        migrations.CreateModel(
            name='QuestLog',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('in_progress', 'In Progress'), ('completed', 'Completed'), ('failed', 'Failed'), ('abandoned', 'Abandoned'), ('not_started', 'Not Started')], default='not_started', max_length=20)),
                ('start_time', models.DateTimeField(auto_now_add=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('progress', models.PositiveIntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('experience_earned', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('quest', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quest_logs', to='quests.quest')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quest_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Quest Logs',
                'ordering': ['start_time'],
                'unique_together': {('user', 'quest')},
            },
        ),
    ]
