# Generated by Django 4.2.24 on 2025-09-09 11:35

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Badge",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "animal",
                    models.CharField(
                        choices=[
                            ("rat", "Rat"),
                            ("ox", "Ox"),
                            ("tiger", "Tiger"),
                            ("rabbit", "Rabbit"),
                            ("dragon", "Dragon"),
                            ("snake", "Snake"),
                            ("horse", "Horse"),
                            ("goat", "Goat"),
                            ("monkey", "Monkey"),
                            ("rooster", "Rooster"),
                            ("dog", "Dog"),
                            ("pig", "Pig"),
                            ("cat", "Cat"),
                        ],
                        max_length=20,
                        unique=True,
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField()),
                (
                    "points_required",
                    models.IntegerField(
                        validators=[django.core.validators.MinValueValidator(0)]
                    ),
                ),
                ("is_special", models.BooleanField(default=False)),
                ("icon_url", models.URLField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Level",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "level_number",
                    models.IntegerField(
                        choices=[
                            (1, "Quartz"),
                            (2, "Amethyst"),
                            (3, "Citrine"),
                            (4, "Turquoise"),
                            (5, "Garnet"),
                            (6, "Peridot"),
                            (7, "Topaz"),
                            (8, "Sapphire"),
                            (9, "Ruby"),
                            (10, "Emerald"),
                            (11, "Diamond"),
                            (12, "Tanzanite"),
                        ],
                        unique=True,
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                (
                    "points_required",
                    models.IntegerField(
                        validators=[django.core.validators.MinValueValidator(0)]
                    ),
                ),
                ("description", models.TextField(blank=True)),
            ],
            options={
                "ordering": ["level_number"],
            },
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_techie", models.BooleanField(default=False)),
                (
                    "tech_stacks",
                    models.TextField(
                        blank=True, help_text="Comma-separated list of tech stacks"
                    ),
                ),
                (
                    "total_points",
                    models.IntegerField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "challenges_completed",
                    models.IntegerField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "quizzes_completed",
                    models.IntegerField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "current_level",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="progress.level",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PointsTransaction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "transaction_type",
                    models.CharField(
                        choices=[
                            ("challenge_completion", "Challenge Completion"),
                            ("quiz_completion", "Quiz Completion"),
                            ("badge_earned", "Badge Earned"),
                            ("level_up", "Level Up Bonus"),
                            ("special_event", "Special Event"),
                        ],
                        max_length=30,
                    ),
                ),
                ("points", models.IntegerField()),
                ("description", models.CharField(max_length=200)),
                ("challenge_id", models.IntegerField(blank=True, null=True)),
                ("quiz_id", models.IntegerField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="points_transactions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="UserBadge",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("earned_at", models.DateTimeField(auto_now_add=True)),
                (
                    "points_when_earned",
                    models.IntegerField(
                        validators=[django.core.validators.MinValueValidator(0)]
                    ),
                ),
                (
                    "badge",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="progress.badge"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="badges",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-earned_at"],
                "unique_together": {("user", "badge")},
            },
        ),
    ]
